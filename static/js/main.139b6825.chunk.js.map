{"version":3,"sources":["ComContent.jsx","Home.jsx","About.jsx","Cards.jsx","Sdata.jsx","Gallery.jsx","Contact.jsx","Error.jsx","Header.jsx","App.js","serviceWorker.js","index.js"],"names":["ComContent","props","className","title","subtitle","para","to","visit","visittitle","Home","About","Cards","src","imgSrc","alt","target","href","link","Sdata","id","imsrc","sname","stitle","slink","Gallery","map","value","key","Contact","useState","fname","lname","finalData","GetData","changeEvent","event","name","prev","type","aria-describedby","onChange","onClick","preventDefault","alert","Error","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","activeClassName","placeholder","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.139b6825.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ComContent = (props) => {\r\n    return(\r\n        <>\r\n           <div className=\"container text-center mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    <h1>{props.title}</h1>\r\n                    <h2>{props.subtitle}</h2>\r\n                    <p>{props.para}</p>\r\n                    <NavLink className=\"btn btn-info\" to={props.visit}>{props.visittitle}</NavLink>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComContent","import React from \"react\";\r\nimport ComContent from \"./ComContent\";\r\n\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n           <ComContent\r\n               title=\"This page is for\"\r\n               subtitle=\"Home Page\"\r\n               para=\"This is my first Raect Project\"\r\n               visit=\"/about\"\r\n               visittitle=\"visit about\"\r\n           />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport ComContent from \"./ComContent\";\r\n\r\nconst About = () => {\r\n    return(\r\n        <>\r\n             <ComContent\r\n               title=\"This page is for\"\r\n               subtitle=\"About Page\"\r\n               para=\"This is my first Raect Project\"\r\n               visit=\"/contact\"\r\n               visittitle=\"visit contact\"\r\n           />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\n\r\nconst Cards = (props) => {\r\n    return(\r\n        <>\r\n          <div className=\"card col-4\">\r\n                <img src={props.imgSrc} className=\"card-img-top\" alt={props.title} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.title} </h5>\r\n                    <p className=\"card-text\">{props.para} </p>\r\n                    <a className=\"btn btn-info\" target=\"_blank\" href={props.link}>link</a> \r\n                </div>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards","const Sdata = [\r\n    {   \r\n        id : 1,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023824.jpg\",\r\n        sname : \"Dark\",\r\n        stitle : \"Demo1\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023824.jpg\"\r\n    },\r\n    {   \r\n        id : 2,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023823.jpg\",\r\n        sname : \"Dark2\",\r\n        stitle : \"Demo2\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023822.jpg\"\r\n    },\r\n    {   \r\n        id : 3,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023821.jpg\",\r\n        sname : \"Dark3\",\r\n        stitle : \"Demo3\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023820.jpg\"\r\n    },\r\n    {   \r\n        id : 4,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023823.jpg\",\r\n        sname : \"Dark2\",\r\n        stitle : \"Demo4\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023822.jpg\"\r\n    },\r\n    {   \r\n        id : 5,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023821.jpg\",\r\n        sname : \"Dark5\",\r\n        stitle : \"Demo1\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023820.jpg\"\r\n    },\r\n    {   \r\n        id : 6,\r\n        imsrc : \"https://wallpapercave.com/wp/wp6023829.jpg\",\r\n        sname : \"Dark4\",\r\n        stitle : \"Demo6\",\r\n        slink : \"https://wallpapercave.com/wp/wp6023828.jpg\"\r\n    }\r\n]\r\n\r\nexport default Sdata","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport Sdata from \"./Sdata\";\r\n\r\nconst Gallery = () => {\r\n    return(\r\n        <>\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                {\r\n                    Sdata.map((value) => {\r\n                       return (\r\n                        <Cards\r\n                            key={value.id} \r\n                            imgSrc={value.imsrc}\r\n                            title ={value.sname}\r\n                            para={value.stitle}\r\n                            link ={value.slink}\r\n                        />\r\n                       )\r\n                    })\r\n                }\r\n              </div>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Gallery","import React, { useState } from \"react\";\r\n\r\nconst Contact = () => {\r\n    const [finalData, GetData] = useState({\r\n        fname: \"\",\r\n        lname:\"\",\r\n    });\r\n    const changeEvent = (event) => {\r\n        const {name,value}= event.target;\r\n        GetData((prev) => {\r\n           return{\r\n            ...prev,\r\n            [name]:value\r\n           }\r\n        })\r\n    }\r\n\r\n    const trigger = (event) => {\r\n        event.preventDefault()\r\n        alert(\r\n            `My First Name is ${finalData.fname} and My last name is ${finalData.lname}`\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container text-center mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 m-auto\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\" name=\"fname\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={changeEvent} value={finalData.fname} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\" name=\"lname\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={changeEvent} value={finalData.lname} />\r\n                        </div>\r\n                        <button type=\"submit\" onClick={trigger} className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\n\r\nconst Error = () => {\r\n    return(\r\n        <>\r\n            Error Page\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className=\"bg-light\">\r\n           <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg  \">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto nav-pills\">\r\n                        <li className=\"nav-item \">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" to=\"/gallery\">Gallery</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                </nav>\r\n           </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Gallery from \"./Gallery\";\nimport Contact from \"./Contact\";\nimport Error from \"./Error\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <main>\n     <Switch>\n       <Route exact path=\"/\" component={Home} />\n       <Route exact path=\"/about\" component={About} />\n       <Route exact path=\"/gallery\" component={Gallery} />\n       <Route exact path=\"/contact\" component={Contact} />\n       <Route  component={Error} />\n     </Switch>\n     </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/scss/bootstrap.scss';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}